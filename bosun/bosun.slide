Bosun Internals
4 August 2015

Craig Peterson
Developer, Stack Overflow
@captncraig
cpeterson@stackoverflow.com

Greg Bray
Site Reliability Engineer, Stack Overflow
@GBrayUT
gbray@stackoverflow.com

* Why Go?

- Cross platform
- Portable binaries

* Why we Love it

- Deployment
- Concurrency
- Reliability
- Memory footprint
- Open Source

* Architecture

* Packages

Everything in one repo. We merged scollector and bosun repos into one.

.link https://github.com/bosun-monitor/bosun

Any sharable code in package at root. `"bosun.org/opentsdb"` `"bosun.org/collect"` `"bosun.org/graphite"`

`"bosun.org/cmd/bosun"` and `"bosun.org/cmd/scollector"` are runnable applications.

Application specific code under cmd: `"bosun.org/cmd/bosun/sched"`

* Dependencies

Vender everything.

.link http://github.com/mjibson/party

Yes, we rewrite imports.

* Web App

Angular single page app.

Typescript.

All static content compiled and embedded at build time (and checked in).

.link http://github.com/mjibson/esc

Server side is very simple rest api.

Gorilla mux used, but very few features used.

* Concurrency

Many things happening at once

- Running alerts (query opentsdb, apply logic, update state)
- Pinging known hosts for health checked
- Sending notifications (Recurring and chained notifiaction tracking)
- Proxying and indexing opentsdb traffic (50k+ datapoints per second)
- Serving web traffic
- Backing up state to disk

* Database

- Everything lives in memory
- Backed up to boltdb for persistence
- gob + gzip

Not a very good solution, but it is simple.

* Project management

- 100% Open source
- All work public on github
- PRs for all features
- All discussion in public slack room
- Travis CI validates all PRs for tests, gofmt, lint, and generate.

* Tips for managing a large applications

* pprof

- enable it. now.
- `import _ "net/http/pprof"`
- View goroutine snapshot when things go sour.
- Run memory or cpu profile of running application remotely.
- Bottlenecks are seldom where you expect.

* test more

- bosun not tested well from beginning.
- Many integration style tests 
.link https://github.com/bosun-monitor/bosun/blob/master/cmd/bosun/sched/sched_test.go#L36 Like this.
- Go has great test tools, but too little knowledge about them in the community.
- Features or bug fixes that add tests rarely break unexpectedly.

* Open source is great

- 26 contributors
- Active slack room for users and developers

Come join us:

.link http://bosun.org/slackInvite.html

* Log more

- Hard to diagnose system if you don't know what is going on
- Logstash / Elasticsearch for indexing logs
- Custom endpoints to expose important data on demand
- Performance metrics for critical paths

* Things go makes difficult

* 

- Plugins. Scollector relies on external processes for custom or one-off functionality.

- Stability. If any goroutine panics, entire app crashes.

- Libraries. Missing a lot of functionality for things that other platforms have good libraries for. Particularly windows stuff.



